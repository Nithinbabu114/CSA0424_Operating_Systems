#include <stdio.h>

#define MAX_PARTITIONS 5
#define MAX_PROCESSES 5

void firstFit(int partitions[], int numPartitions, int processes[], int numProcesses);

int main() {
    int partitions[MAX_PARTITIONS] = {40, 10, 30, 60};
    int processes[MAX_PROCESSES] = {100, 50, 30, 120, 35};
    int numPartitions = sizeof(partitions) / sizeof(partitions[0]);
    int numProcesses = sizeof(processes) / sizeof(processes[0]);

    printf("Initial memory partitions:\n");
    for (int i = 0; i < numPartitions; i++) {
        printf("%d KB\t", partitions[i]);
    }
    printf("\n\n");

    firstFit(partitions, numPartitions, processes, numProcesses);

    return 0;
}

void firstFit(int partitions[], int numPartitions, int processes[], int numProcesses) {
    int allocation[numProcesses];
    for (int i = 0; i < numProcesses; i++) {
        allocation[i] = -1;
    }

    for (int i = 0; i < numProcesses; i++) {
        for (int j = 0; j < numPartitions; j++) {
            if (processes[i] <= partitions[j]) {
                allocation[i] = j;
                partitions[j] -= processes[i];
                break;
            }
        }
    }

    printf("Process\tSize\tPartition\n");
    for (int i = 0; i < numProcesses; i++) {
        printf("%d\t%d KB\t", i + 1, processes[i]);
        if (allocation[i] != -1) {
            printf("%d\n", allocation[i] + 1);
        } else {
            printf("Not allocated\n");
        }
    }
}
