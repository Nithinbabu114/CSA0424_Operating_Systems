#include <stdio.h>

#define MAX_PROCESS 10

typedef struct {
    int burst_time;
    int remaining_time;
    int waiting_time;
    int turnaround_time;
} Process;

void calculateAverageTimes(Process processes[], int num_processes, int quantum_time) {
    int total_waiting_time = 0, total_turnaround_time = 0;

    Process processes_copy[MAX_PROCESS];
    for (int i = 0; i < num_processes; i++) {
        processes_copy[i] = processes[i];
    }

    int completed_processes = 0, current_time = 0;
    while (completed_processes < num_processes) {
        for (int i = 0; i < num_processes; i++) {
            if (processes_copy[i].remaining_time > 0) {
                if (processes_copy[i].remaining_time <= quantum_time) {
                    current_time += processes_copy[i].remaining_time;
                    processes_copy[i].remaining_time = 0;
                    completed_processes++;

                    processes_copy[i].waiting_time = current_time - processes[i].burst_time;
                    processes_copy[i].turnaround_time = current_time;
                } else {
                    current_time += quantum_time;
                    processes_copy[i].remaining_time -= quantum_time;
                }
            }
        }
    }

    for (int i = 0; i < num_processes; i++) {
        total_waiting_time += processes_copy[i].waiting_time;
        total_turnaround_time += processes_copy[i].turnaround_time;
    }

    float avg_waiting_time = (float)total_waiting_time / num_processes;
    float avg_turnaround_time = (float)total_turnaround_time / num_processes;

    printf("Average Waiting Time: %.2f ms\n", avg_waiting_time);
    printf("Average Turnaround Time: %.2f ms\n", avg_turnaround_time);
}

int main() {
    Process processes[] = {
        {24, 24, 0, 0},
        {3, 3, 0, 0},
        {3, 3, 0, 0}
    };
    int num_processes = sizeof(processes) / sizeof(processes[0]);
    int quantum_time = 4;

    calculateAverageTimes(processes, num_processes, quantum_time);

    return 0;
}
